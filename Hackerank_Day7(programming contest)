import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;



class Result {

    /*
     * Complete the 'minimizeBias' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY ratings as parameter.
     */

    public static int minimizeBias(List<Integer> ratings) {
    // Write your code here
    int n=ratings.size();
    int sum=0,j=1;
    Collections.sort(ratings);
    if(n%2==0)
    {

    
    for(int i=0;i<n;i=i+2)
    {
        
        
        int dif=ratings.get(j)-ratings.get(i);
         sum=sum+dif;
        j++;

    }
    }
   else
    {
        ratings.remove(n);
        for(int i=0;i<n;i=i+2)
        {
      
            int dif=ratings.get(i)-ratings.get(j);
            sum=sum+dif;
            j++;

        }



    }
    return sum;
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int ratingsCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> ratings = new ArrayList<>();

        for (int i = 0; i < ratingsCount; i++) {
            int ratingsItem = Integer.parseInt(bufferedReader.readLine().trim());
            ratings.add(ratingsItem);
        }

        int result = Result.minimizeBias(ratings);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
